from xml.dom.minidom import parse, parseString

class parseTrace():
    
    __crash = False
    
    def __init__(self, trace, idsession, logging, dbinterface):
        self.__log = logging
        try:
            self.__dom = parseString(trace.encode( "utf-8" ))
        except:
            self.__log.error("parseTrace: Parsing Error")
            self.__log.error("parseTrace: Error "+trace)
            self.__crash = True
            pass
        self.__dbinterface = dbinterface
        self.__idsession = idsession
        
        
    def getID(self):
        for node in self.__dom.getElementsByTagName("trace"):
            return node.getAttribute("id")
    
    def getTS(self):
        for node in self.__dom.getElementsByTagName("trace"):
            return node.getAttribute("timestamp")
    
    def getType(self):
        for node in self.__dom.getElementsByTagName("trace"):
            for node2 in node.getElementsByTagName("class"):
                return node2.getAttribute("type")
    
    def getReturn(self):
        for node in self.__dom.getElementsByTagName("trace"):
            for node2 in node.getElementsByTagName("class"):
                return node2.getAttribute("return")
    
    def getPID(self):
        for node in self.__dom.getElementsByTagName("trace"):
            for node2 in node.getElementsByTagName("process"):
                return node2.getAttribute("pid")
    
    def getPPID(self):
        for node in self.__dom.getElementsByTagName("trace"):
            for node2 in node.getElementsByTagName("process"):
                return node2.getAttribute("ppid")
    
    def getSContext(self):
        for node in self.__dom.getElementsByTagName("trace"):
            for node2 in node.getElementsByTagName("process"):
                return node2.getAttribute("scontext")
    
    def getNameSubject(self):
        for node in self.__dom.getElementsByTagName("trace"):
            for node2 in node.getElementsByTagName("process"):
                return node2.getAttribute("name")
    
    def getNameObject(self):
        for node in self.__dom.getElementsByTagName("trace"):
            for node2 in node.getElementsByTagName("object"):
                return node2.getAttribute("name")
    
    def getTContext(self):
        for node in self.__dom.getElementsByTagName("trace"):
            for node2 in node.getElementsByTagName("object"):
                return node2.getAttribute("tcontext")
    
    def getPerms(self):
        for node in self.__dom.getElementsByTagName("trace"):
            for node2 in node.getElementsByTagName("object"):
                return node2.getAttribute("rights")
    
    def getIPSrc(self):
        for node in self.__dom.getElementsByTagName("trace"):
            for node2 in node.getElementsByTagName("ip"):
                return node2.getAttribute("ipsource")
            
    def getPortSrc(self):
        for node in self.__dom.getElementsByTagName("trace"):
            for node2 in node.getElementsByTagName("ip"):
                return node2.getAttribute("portsource")
    
    def getIPDest(self):
        for node in self.__dom.getElementsByTagName("trace"):
            for node2 in node.getElementsByTagName("ip"):
                return node2.getAttribute("ipdest")
            
    def getPortDest(self):
        for node in self.__dom.getElementsByTagName("trace"):
            for node2 in node.getElementsByTagName("ip"):
                return node2.getAttribute("portdest")
    
    def getState(self):
        for node in self.__dom.getElementsByTagName("trace"):
            for node2 in node.getElementsByTagName("ip"):
                return node2.getAttribute("state")
    
    def getTypeConnect(self):
        for node in self.__dom.getElementsByTagName("trace"):
            for node2 in node.getElementsByTagName("ip"):
                return node2.getAttribute("typeconnect")
    
    def getIPSize(self):
        for node in self.__dom.getElementsByTagName("trace"):
            for node2 in node.getElementsByTagName("ip"):
                return node2.getAttribute("size")
    
    def getIPProto(self):
        for node in self.__dom.getElementsByTagName("trace"):
            for node2 in node.getElementsByTagName("ip"):
                return node2.getAttribute("prot")
    
    
    def getData(self):
        for node in self.__dom.getElementsByTagName("trace"):
            if node.getElementsByTagName("data")[0]:
                return " "
            else:
                return node.getElementsByTagName("data")[0]
            
    def isNetWork(self):
         if self.getType() == "network":
             return True
         else:
             return False 
            
    
                
    
    def generateSQL(self):
        return (self.getID(), self.__idsession, self.getTS(), self.getType(), self.getReturn(), self.getPID(), self.getPPID(), self.getSContext(), self.getNameSubject(), self.getNameObject(), self.getTContext(), self.getPerms(), self.getData())
    
    def isCrash(self):
        return self.__crash
    
    def generateString(self):
        return str(self.getID())+" "+str(self.__idsession)+" "+str(self.getTS())+" "+str(self.getType())+" "+str(self.getReturn())+" "+str(self.getPID())+" "+str(self.getPPID())+" "+str(self.getSContext())+" "+str(self.getNameSubject())+" "+str(self.getNameObject())+" "+str(self.getTContext())+" "+str(self.getPerms())+" "+str(self.getData())
    
    def insertTrace(self):
        if self.isNetWork():
            self.__dbinterface.insertNet(self.getID(), self.__idsession, self.getTS(), self.getType(), self.getReturn(), self.getPID(), self.getPPID(), self.getSContext(), self.getNameSubject(), self.getIPSrc(), self.getPortSrc(), self.getIPDest(), self.getPortDest(), self.getState(), self.getTypeConnect(), self.getIPSize(), self.getIPProto(), self.getData())
        else:
            self.__dbinterface.insert(self.getID(), self.__idsession, self.getTS(), self.getType(), self.getReturn(), self.getPID(), self.getPPID(), self.getSContext(), self.getNameSubject(), self.getNameObject(), self.getTContext(), self.getPerms(), self.getData())
        return 1
    
    
