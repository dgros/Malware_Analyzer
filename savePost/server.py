import socketserver as SocketServer
from line import readTrace
from lineThread import lineThread
from queue import *
import threading
import logging
from pginterface import *
import threading

class dataChunk():
    __data = ""
    __idsession = 0
    
    def __init__(self, data, idsession):
        self.__data = data
        self.__idsession = idsession
        
    def getData(self):
        return self.__data
    
    def getSession(self):
        return self.__idsession

class traceServer(SocketServer.BaseRequestHandler):
    
    def settoRead(qu):
        self.__toRead = qu

    def setLog(log):
        self.__log = log

    def handle(self):
        rest = ""
        idsession = self.server.getDB().newIdSession()
        while 1:
            self.data = self.request.recv(5096).strip()
            if not self.data: 
                print("Connexion Error !!!!!!!!!!!!!!")
                self.data = self.request.recv(5096).strip()
                if not self.data:
                    print("Connexion CLOSED !!!!!!!!!!!!")
                    break
            dc = dataChunk(self.data, idsession)
            self.server.getQueue().put(dc)

class traceServerTCP(SocketServer.TCPServer):
    
    def setQueue(self,qu):
        self.toRead = qu
        
    def getQueue(self):
        return self.toRead
    
    def setDB(self, db):
        self.db2 = db
        
    def getDB(self):
        return self.db2
    
class traceServerThread(threading.Thread):
    def __init__(self, toRead, logging, db2):
        threading.Thread.__init__(self)
        self.Terminated = False
        self.server = traceServerTCP((HOST, PORT), traceServer)
        self.server.setQueue(toRead)
        self.server.setDB(db2)
        self.__log = logging
    
    def run(self):
        self.__log.debug("traceServerThread: run")
        while not self.Terminated:
             self.server.serve_forever()
        
    def stop(self):
        self.Terminated = True   

if __name__ == "__main__":
    HOST, PORT = "192.168.99.50", 9998
    
    LOG_FILENAME = "/home/damien/traceAnalyzer.log"
    logging.basicConfig(filename=LOG_FILENAME,level=logging.DEBUG)
    
    toRead = Queue()
    
    dbconfig = dbconfig()
    
    dblock = threading.Lock()
    
    db2 = dbinterface(dbconfig, logging, dblock)

    trThread = traceServerThread(toRead,logging, db2)
    trThread.daemon = True
    trThread.start()
    
    lineT = lineThread(toRead, logging,db2)
    lineT.daemon = True
    lineT.start()
    lineT.join()
    
