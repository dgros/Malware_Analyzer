#define _WIN32_WINNT 0x501
#include <windows.h>
#include <string.h>
#include <stdlib.h>
#include <winsock2.h>
#include <ws2tcpip.h>
#include <iphlpapi.h>
#include <stdio.h>
#include <psapi.h>
#include <ntdef.h>
#include <winioctl.h>



#define MALLOC(x) HeapAlloc(GetProcessHeap(), 0, (x))
#define FREE(x) HeapFree(GetProcessHeap(), 0, (x))

#define FILE_DEVICE_DKF     0x12345678
#define IOCTL_DKF_START     (ULONG) CTL_CODE(FILE_DEVICE_DKF,0x00, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_DKF_STOP      (ULONG) CTL_CODE(FILE_DEVICE_DKF,0x01, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_DKF_SHUTDOWN      (ULONG) CTL_CODE(FILE_DEVICE_DKF,0x02, METHOD_BUFFERED, FILE_ANY_ACCESS)

#define DEFAULT_BUFLEN 5096
#define DEFAULT_PORT 9998


typedef struct TCPInfo {
    char localip[128];
    int localport;
    char distip[128];
    int distport;
    char state[20];
} TCPInfo;

typedef struct UDPInfo {
    char localip[128];
    int localport;
} UDPInfo;

NTSTATUS ( WINAPI *NtLoadDriver ) ( IN PUNICODE_STRING DriverServiceName );
NTSTATUS ( WINAPI *NtUnLoadDriver ) ( IN PUNICODE_STRING DriverServiceName );
VOID (WINAPI * RtlInitUnicodeString ) (  PUNICODE_STRING DestinationString, PCWSTR SourceString);


BOOL InstallDriver(IN SC_HANDLE  SchSCManager,IN LPCTSTR    DriverName, IN LPCTSTR    ServiceExe);
BOOL RemoveDriver(IN SC_HANDLE  SchSCManager,IN LPCTSTR    DriverName);
BOOL StartDriver(IN SC_HANDLE  SchSCManager,IN LPCTSTR    DriverName);
BOOL StopDriver(IN SC_HANDLE  SchSCManager,IN LPCTSTR    DriverName);
void installation();
void suppression();
void MakeXML(char * buffer);
void ListenDriver();
TCPInfo GetIpTcp(int pidsearch);
void MakeXMLNet(char * buffer);
void ListenDriverNet();


UDPInfo GetUdpInfo(int pidsearch);
void Initialize();

void SetDebugPrivilege();

int connection();
int sendmesg(char * sendbuf);
int closeconnection();

SC_HANDLE   schSCManager;

